name: CI - CLIENT
on:
  pull_request:

jobs:
  QualityGate:
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Setup node to use the client project version
      - uses: actions/setup-node@v3
        with:
          node-version: 18.17.0
          # Already optimized for caching, nice. Only caches yarn not node_modules as these could change with node version.
          cache: yarn

      - name: Log Yarn Version
        run: yarn --version

      - name: Install dependencies ðŸ“¦
        run: yarn workspace client install

      # LINT
      - name: Linting â˜•
        run: yarn workspace client lint

      # PRETTIER FORMAT CHECK
      - name: Formatting ðŸŒ¹
        run: yarn workspace client prettier:check

      # TEST
      - name: Test - Unit ðŸ§ª
        run: yarn workspace client test:unit


      # INSTALL PLAYWRIGHT OR USE CACHE
      # TAKEN FROM https://github.com/microsoft/playwright/issues/7249 
      # AND MODIFIED TO POST-LOAD RUNNER DEPS ON CACHE HIT

      # Figures out the version of playwright that's installed.
      # 1. Because we don't know what version yarn will resolve it to, we have
      #    to use `yarn why` to get the actually installed version.
      # 2. Because we're in a workspace, we need to make sure we get the version
      #    for the root and not any children, hence the `grep`. If not using
      #    workspaces, this can be skipped.
      # 3. jq comes pre-installed in the Ubuntu runner, so we use that to get
      #    the correct version string.
      # 4. Finally, we use sed to extract just the version number (eg; '1.22.0')
      # The result is stored in steps.playwright-version.outputs.version
      - name: Get installed Playwright version
        id: playwright-version
        run: echo "::set-output name=version::$(yarn why --json @playwright/test | grep -h 'workspace:.' | jq --raw-output '.children[].locator' | sed -e 's/@playwright\/test@.*://')"

      # Attempt to restore the correct Playwright browser binaries based on the
      # currently installed version of Playwright (The browser binary versions
      # may change with Playwright versions).
      # Note: Playwright's cache directory is hard coded because that's what it
      # says to do in the docs. There doesn't appear to be a command that prints
      # it out for us.
      - uses: actions/cache@v3
        id: playwright-cache
        with:
          path: '~/.cache/ms-playwright'
          key: '${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}'
          # As a fallback, if the Playwright version has changed, try use the
          # most recently cached version. There's a good chance that at least one
          # of the browser binary versions haven't been updated, so Playwright can
          # skip installing that in the next step.
          # Note: When falling back to an old cache, `cache-hit` (used below)
          # will be `false`. This allows us to restore the potentially out of
          # date cache, but still let Playwright decide if it needs to download
          # new binaries or not.
          restore-keys: |
            ${{ runner.os }}-playwright-

      # If the Playwright browser binaries weren't able to be restored, we tell
      # paywright to install everything for us.
      - name: Install Playwright if not in cache
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
      - name: Install Playwright's OS dependencies on cache hit 
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: npx playwright install-deps

      # ACTUAL TESTS
      - name: Test - Integration ðŸ§ª
        run: yarn workspace client test:component:integration
      # https://playwright.dev/docs/ci-intro#html-report
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report-integration
          path: packages/client/playwright-report-integration/
          retention-days: 2
      - name: Test - E2E ðŸ§ª
        run: yarn workspace client test:e2e
      # https://playwright.dev/docs/ci-intro#html-report
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report-e2e
          path: packages/client/playwright-report-e2e/
          retention-days: 2
