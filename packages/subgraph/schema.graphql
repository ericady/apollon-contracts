# # Custom

# Singleton entity to store the ID of the last created Token

type Token @entity {
  id: Bytes!
  address: Bytes! # contract address
  symbol: String!
  createdAt: BigInt!
  #
  priceUSD: BigDecimal!
  # TODO: Fetch this from the client side and get it from the TradingView entities
  # priceUSD24hAgo: BigDecimal!
  #
  isPoolToken: Boolean!
}

type DebtTokenMeta @entity(immutable: true) {
  id: Bytes!
  token: Token! @relation(name: "TokenToDebtTokenMeta")
  timestamp: BigInt!

  # global
  stabilityDepositAPY: BigDecimal!
  totalDepositedStability: BigDecimal!
  totalReserve: BigDecimal!
  # TODO: Fetch this from the client side
  # totalReserve24hAgo: BigDecimal!
  totalSupplyUSD: BigDecimal!
  # TODO: Fetch this from the client side
  # totalSupplyUSD24hAgo: BigDecimal!
}

type UserDebtTokenMeta @entity {
  # "UserDebtTokenMeta" + token + borrower
  id: String!
  borrower: Bytes!
  token: Token! @relation(name: "TokenToUserDebtTokenMeta")

  walletAmount: BigDecimal!
  troveMintedAmount: BigDecimal!
  stabilityLostAmount: BigDecimal!
  stabilityCompoundAmount: BigDecimal!
}
